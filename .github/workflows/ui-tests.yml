name: Run UI Tests in Docker with FFMPEG

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  ui-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image without cache
        run: docker build --no-cache -t ui-tests-image -f Dockerfile .

      - name: Test ffmpeg startup
        run: |
          echo "Testing ffmpeg startup..."
          docker run --rm ui-tests-image ffmpeg -f lavfi -i testsrc=duration=3:size=640x480:rate=25 -y /app/test.mp4

      - name: Start virtual display
        run: |
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99

      - name: Test FFMPEG screen recording
        run: |
          echo "Starting virtual display..."
          Xvfb :1 -screen 0 1280x720x24 &
          export DISPLAY=:99
          sleep 2
          echo "DISPLAY is $DISPLAY"
          ffmpeg -f x11grab -video_size 1280x720 -i $DISPLAY -t 5 -y /tmp/test-recording.mp4
          ls -lh /tmp/test-recording.mp4
          file /tmp/test-recording.mp4
          test -s /tmp/test-recording.mp4

      - name: Run tests inside Docker
        run: |
          docker run --rm \
          -e DISPLAY=:99 \
          -v ${{ github.workspace }}:/app \
          ui-tests-image \
          mvn test \
          -Dvideo.folder=target/videos \
          -Dvideo.enabled=true \
          -Dvideo.mode=ALL \
          -Drecorder.type=FFMPEG \
          -Dvideo.save.mode=ALL \
          -Dsurefire.suiteXmlFiles=./src/test/resources/testng.xml


      - name: Archive target folder
        run: |
          cd target
          zip -r ../target.zip .
        if: always()

      - name: Upload target folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: target-folder
          path: target.zip
        if: always()
